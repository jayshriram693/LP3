import java.util.*;

class Job {

	// Each job has a unique id, profit, and deadline
	char id;
	int deadline, profit;

	// Constructor
	public Job(char id, int deadline, int profit) {
		this.id = id;
		this.deadline = deadline;
		this.profit = profit;
	}

	// Function to schedule jobs
	void printJobScheduling(Job[] arr, int t) {
		// Number of jobs
		int n = arr.length;

		// Sort all jobs in decreasing order of profit
		Arrays.sort(arr, (a, b) -> b.profit - a.profit);

		// Array to keep track of free time slots
		boolean[] result = new boolean[t];

		// Array to store the sequence of jobs
		char[] job = new char[t];

		// Iterate through all jobs
		for (int i = 0; i < n; i++) {
			// Find a free slot for this job, starting from the last possible slot
			for (int j = Math.min(t - 1, arr[i].deadline - 1); j >= 0; j--) {
				// Free slot found
				if (!result[j]) {
					result[j] = true;
					job[j] = arr[i].id;
					break;
				}
			}
		}

		// Print the job sequence for maximum profit
		for (char jb : job) {
			System.out.print(jb + " ");
		}
		System.out.println();
	}

	// Driver code
	public static void main(String[] args) {
		Job[] arr = {
			new Job('a', 2, 100),
			new Job('b', 1, 19),
			new Job('c', 2, 27),
			new Job('d', 1, 25),
			new Job('e', 3, 15)
		};

		System.out.println("Following is the maximum profit sequence of jobs");

		Job job = new Job(' ', 0, 0);

		// Function call
		job.printJobScheduling(arr, 3);
	}
}
